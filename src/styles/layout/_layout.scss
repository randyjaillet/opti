@use '../abstracts' as *;


// ANCHOR Root element

.opti {
	display: block;
	position: relative;

	// ANCHOR Surface and its states

	.surface {
		display: flex;
		justify-content: flex-end;
		align-items: center;
		position: relative;
		min-height: $mh;
		z-index: 100;
		margin: 0 var(--surface-rightmar) 0 var(--surface-leftmar);
		padding: var(--surface-vertpad) var(--surface-rightpad) var(--surface-vertpad) var(--surface-leftpad);
	}
	&[disabled=disabled] .surface {
		padding: 0;
		min-height: 0;
	}
	&:is(.activated, .activatedLocked):not([disabled=disabled]) .surface {
		z-index: 101;
	}

	// ANCHOR Textual surface elements

	.texts {
		flex: 1 1 auto;
		min-height: $leading;
		display: flex;
		flex-direction: column;
		justify-content: center;
		transform: none;
	}
	.text-grp {
		display: inline-block;
		margin: 0 5px 0 0;

		&:after {
			margin-left: .35em;
			content: "/";
		}

	}

	.text-ph,
	.text-op {
		height: $leading;
		display: block;
		order: 0;
	}
	.text-ul {
		display: flex;
		flex-wrap: wrap;
		flex: 1 1 auto;
		gap: 5px;
		align-items: center;
		margin: 0;
		padding: 0;
	}
	&[multiple=multiple] .text-ul:not(:empty) {
		min-height: $tagLeading;
		height: auto;
	}
	.tag {
		display: inline-flex;
		align-items: center;
		flex-wrap: nowrap;
		flex: 0 1 auto;
		width: 0;
		margin: 0;
		padding: 0 var(--tag-horzpad);
	}
	&[multiple=multiple] .text-ul:not(:empty) .tag {
		width: auto;
	}
	.icon-ex {
		flex: 0 0 $tagBGSize;
		width: $tagBGSize;
		height: $tagBGSize;
		margin: 0;
		margin-right: $tagHorzPad * .6;
	}

	// ANCHOR Surface icons

	.icon-chevs,
	.icon-ban-surf,
	.icon-ex-surf {
		flex: 0 0 auto;
		order: 2;
	}
	&:not([disabled=disabled]) .icon-chevs,
	&[disabled=disabled] .icon-ban-surf,
	&:not(.zerostate, [disabled=disabled]) .icon-ex-surf {
		display: block;
		margin-left: $rightPad;
	}
	.surface > {
		.icon-chevs {
			height: 16px * $oscale;
		}
		.icon-ban-surf {
			height: 13px * $oscale;
		}
		.icon-ex-surf {
			height: 18px * $oscale;
			display: inline-flex;
		}
	}
	&:not([disabled=disabled]) .icon-chevs {
		margin-right: -3px * $oscale;
	}
	&:not([disabled=disabled], .zerostate) .icon-ex-surf {
		opacity: 1;
		margin-right: -8px;
	}

	// ANCHOR Dropdown

	.dropdown {
		position: absolute;
		width: 100%;
		min-width: 200px;
		top: 100%;
		z-index: 102;
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
	}
	&.flip-v .dropdown {
		top: auto;
		bottom: calc(100% + 2px);
		transform: translateY(-5px);
	}

	// ANCHOR Search

	.search {
		$hpad: 7px * $oscale;
		display: flex;
		align-items: center;
		margin-top: 2px;
		padding: 6px 7px;
	}
	&.flip-v .search {
		order: 1;
	}
	.icon-search {
		margin-right: 4px;
	}
	.search-input {
		flex-grow: 1;
	}

	// ANCHOR Dropdown list

	.list {
		max-height: 50vh;
		position: relative;
		overflow: scroll;
		margin: 2px 0 0 0;
		padding: 12px 0;

		h5 {
			margin-left: $indentation;
			padding: 0;
		}
	}
	.list-item {
		display: flex;
		align-items: center;
		justify-content: flex-start;
		position: relative;
		margin: 0;
		padding: (5px * $oscale) ($indentation * .5) (5px * $oscale) $indentation;

		> * {
			flex: 1 1 auto;
		}
		svg {
			flex: 0 0 auto;
			margin-left: 3px;
		}
	}
	section > .list-item {
		padding-left: $indentation * 2;
	}

	// ANCHOR List item icons

	.list-item {
		.icon-arrow,
		.icon-tick {
			display: inline-flex;
			width: 0;
			height: 0;
			margin-left: 0;
		}
	}
	&:not([disabled=disabled]) {
		.list-item {
			&.fakefocus .icon-arrow,
			&.selected .icon-tick {
				$size: 16px;
				width: $size;
				height: $size;
			}
			&.fakefocus .icon-arrow {
				margin-left: -10px;
			}
			.list-item[disabled=disabled] .icon-ban {
				display: inline-flex;
			}
		}
	}
}